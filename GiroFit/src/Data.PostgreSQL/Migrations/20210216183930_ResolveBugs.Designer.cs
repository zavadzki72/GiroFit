// <auto-generated />
using System;
using Data.PostgreSQL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.PostgreSQL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210216183930_ResolveBugs")]
    partial class ResolveBugs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_creation");

                    b.Property<int>("IdTemplateExercise")
                        .HasColumnType("integer");

                    b.Property<int>("IdTrain")
                        .HasColumnType("integer");

                    b.Property<bool>("IsWatched")
                        .HasColumnType("boolean")
                        .HasColumnName("is_watched");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_updated");

                    b.HasKey("Id");

                    b.HasIndex("IdTemplateExercise");

                    b.HasIndex("IdTrain");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.ExerciseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("UrlVideo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url_video");

                    b.HasKey("Id");

                    b.ToTable("ExerciseType");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_creation");

                    b.Property<DateTime?>("DtaEnd")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_end");

                    b.Property<DateTime?>("DtaStart")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_start");

                    b.Property<int>("IdTemplateModule")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_locked");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_updated");

                    b.HasKey("Id");

                    b.HasIndex("IdTemplateModule");

                    b.HasIndex("IdUser");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BreakTime")
                        .HasColumnType("integer")
                        .HasColumnName("break_time");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer")
                        .HasColumnName("frequency");

                    b.Property<int>("IdExerciseType")
                        .HasColumnType("integer");

                    b.Property<int>("IdTemplateTrain")
                        .HasColumnType("integer");

                    b.Property<int>("Sets")
                        .HasColumnType("integer")
                        .HasColumnName("sets");

                    b.Property<int>("Time")
                        .HasColumnType("integer")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex("IdExerciseType");

                    b.HasIndex("IdTemplateTrain");

                    b.ToTable("TemplateExercise");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_locked");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<int>("UserFrenquency")
                        .HasColumnType("integer")
                        .HasColumnName("user_frenquency");

                    b.Property<int>("UserLevel")
                        .HasColumnType("integer")
                        .HasColumnName("user_level");

                    b.Property<int>("UserObjective")
                        .HasColumnType("integer")
                        .HasColumnName("user_objective");

                    b.Property<int>("UserSexo")
                        .HasColumnType("integer")
                        .HasColumnName("user_sexo");

                    b.HasKey("Id");

                    b.ToTable("TemplateModule");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateTrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cover_Page")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cover_page");

                    b.Property<int>("IdTemplateModule")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("IdTemplateModule");

                    b.ToTable("TemplateTrain");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_creation");

                    b.Property<DateTime?>("DtaFinished")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_finished");

                    b.Property<int>("IdModule")
                        .HasColumnType("integer");

                    b.Property<int>("IdTemplateTrain")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean")
                        .HasColumnName("is_finished");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_updated");

                    b.HasKey("Id");

                    b.HasIndex("IdModule");

                    b.HasIndex("IdTemplateTrain");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_creation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<bool>("FlgInativo")
                        .HasColumnType("boolean")
                        .HasColumnName("flg_inativo");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer")
                        .HasColumnName("frequency");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric")
                        .HasColumnName("height");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nickname");

                    b.Property<int>("Objective")
                        .HasColumnType("integer")
                        .HasColumnName("objective");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer")
                        .HasColumnName("sexo");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dta_updated");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Exercise", b =>
                {
                    b.HasOne("Domain.Models.PostgreSql.Entities.TemplateExercise", "TemplateExercise")
                        .WithMany("Modules")
                        .HasForeignKey("IdTemplateExercise")
                        .IsRequired();

                    b.HasOne("Domain.Models.PostgreSql.Entities.Train", "Train")
                        .WithMany("Exercises")
                        .HasForeignKey("IdTrain")
                        .IsRequired();

                    b.Navigation("TemplateExercise");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Module", b =>
                {
                    b.HasOne("Domain.Models.PostgreSql.Entities.TemplateModule", "TemplateModule")
                        .WithMany("Modules")
                        .HasForeignKey("IdTemplateModule")
                        .IsRequired();

                    b.HasOne("Domain.Models.PostgreSql.Entities.User", "User")
                        .WithMany("Modules")
                        .HasForeignKey("IdUser")
                        .IsRequired();

                    b.Navigation("TemplateModule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateExercise", b =>
                {
                    b.HasOne("Domain.Models.PostgreSql.Entities.ExerciseType", "ExerciseType")
                        .WithMany("TemplateExercises")
                        .HasForeignKey("IdExerciseType")
                        .IsRequired();

                    b.HasOne("Domain.Models.PostgreSql.Entities.TemplateTrain", "TemplateTrain")
                        .WithMany("TemplateExercises")
                        .HasForeignKey("IdTemplateTrain")
                        .IsRequired();

                    b.Navigation("ExerciseType");

                    b.Navigation("TemplateTrain");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateTrain", b =>
                {
                    b.HasOne("Domain.Models.PostgreSql.Entities.TemplateModule", "TemplateModule")
                        .WithMany("TemplateTrains")
                        .HasForeignKey("IdTemplateModule")
                        .IsRequired();

                    b.Navigation("TemplateModule");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Train", b =>
                {
                    b.HasOne("Domain.Models.PostgreSql.Entities.Module", "Module")
                        .WithMany("Trains")
                        .HasForeignKey("IdModule")
                        .IsRequired();

                    b.HasOne("Domain.Models.PostgreSql.Entities.TemplateTrain", "TemplateTrain")
                        .WithMany("Trains")
                        .HasForeignKey("IdTemplateTrain")
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("TemplateTrain");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.ExerciseType", b =>
                {
                    b.Navigation("TemplateExercises");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Module", b =>
                {
                    b.Navigation("Trains");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateExercise", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateModule", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("TemplateTrains");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.TemplateTrain", b =>
                {
                    b.Navigation("TemplateExercises");

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.Train", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("Domain.Models.PostgreSql.Entities.User", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
